{
  "name": "Gap Bridging Workflow",
  "nodes": [
    {
      "parameters": {},
      "name": "Trigger",
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 1,
      "position": [250, 300]
    },
    {
      "parameters": {
        "operation": "executeQuery",
        "query": "SELECT * FROM nodes WHERE context_id = {{ $json.context_id }}"
      },
      "name": "Load Graph",
      "type": "n8n-nodes-base.postgres",
      "typeVersion": 1,
      "position": [450, 300]
    },
    {
      "parameters": {
        "jsCode": "// Detect gaps using Python gap detector\n// This is a simplified version - actual implementation in Python\nconst nodes = $input.all();\nconst gaps = [];\n\n// Return top 3 gaps\nreturn { gaps: gaps.slice(0, 3) };"
      },
      "name": "Detect Gaps",
      "type": "n8n-nodes-base.code",
      "typeVersion": 1,
      "position": [650, 300]
    },
    {
      "parameters": {
        "model": "claude-sonnet-4",
        "messages": [
          {
            "role": "user",
            "content": "Here are structural gaps in the discourse: {{ $json.gaps }}\n\nProvide insights on how to bridge these gaps."
          }
        ]
      },
      "name": "Generate Gap Insights",
      "type": "n8n-nodes-base.aiAgent",
      "typeVersion": 1,
      "position": [850, 300]
    },
    {
      "parameters": {
        "respondWith": "json"
      },
      "name": "Return Results",
      "type": "n8n-nodes-base.respondToWebhook",
      "typeVersion": 1,
      "position": [1050, 300]
    }
  ],
  "connections": {
    "Trigger": {
      "main": [[{"node": "Load Graph", "type": "main", "index": 0}]]
    },
    "Load Graph": {
      "main": [[{"node": "Detect Gaps", "type": "main", "index": 0}]]
    },
    "Detect Gaps": {
      "main": [[{"node": "Generate Gap Insights", "type": "main", "index": 0}]]
    },
    "Generate Gap Insights": {
      "main": [[{"node": "Return Results", "type": "main", "index": 0}]]
    }
  }
}
